# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16DR-Z136yNV4JqpQjNrJd-r-1vn5kJhZ
"""

# save_model.py
from sklearn.datasets import load_iris
from sklearn.naive_bayes import GaussianNB
import pickle

iris = load_iris()
X, y = iris.data, iris.target

model = GaussianNB()
model.fit(X, y)

with open("model.pkl", "wb") as f:
    pickle.dump(model, f)
# app.py
import streamlit as st
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import pickle
from sklearn.datasets import load_iris

# Load model
with open("model.pkl", "rb") as f:
    model = pickle.load(f)

# Load data
iris_data = load_iris()
df = pd.DataFrame(iris_data.data, columns=iris_data.feature_names)
df['species'] = pd.Categorical.from_codes(iris_data.target, iris_data.target_names)

# Sidebar Navigation
st.set_page_config(page_title="Iris Classifier", layout="centered")
page = st.sidebar.selectbox("Pilih Halaman", ["Deskripsi Data", "Prediksi", "Visualisasi"])

# ====================== Page 1: Deskripsi Data =========================
if page == "Deskripsi Data":
    st.title("ðŸ“Š Deskripsi Dataset Iris")
    st.write("Dataset Iris berisi 150 data bunga dengan 4 fitur dan 3 jenis spesies.")
    st.dataframe(df)

    st.markdown("""
    **Fitur:**
    - Sepal Length (cm)
    - Sepal Width (cm)
    - Petal Length (cm)
    - Petal Width (cm)

    **Target Kelas:**
    - Setosa
    - Versicolor
    - Virginica
    """)

# ====================== Page 2: Prediksi =========================
elif page == "Prediksi":
    st.title("ðŸ”® Prediksi Spesies Iris")

    sepal_length = st.slider("Sepal Length (cm)", 4.0, 8.0, 5.8)
    sepal_width = st.slider("Sepal Width (cm)", 2.0, 4.5, 3.0)
    petal_length = st.slider("Petal Length (cm)", 1.0, 7.0, 4.0)
    petal_width = st.slider("Petal Width (cm)", 0.1, 2.5, 1.2)

    input_data = np.array([[sepal_length, sepal_width, petal_length, petal_width]])

    if st.button("Prediksi"):
        pred = model.predict(input_data)[0]
        species = iris_data.target_names[pred]
        st.success(f"Model memprediksi bunga ini adalah: **{species.capitalize()}**")

# ====================== Page 3: Visualisasi =========================
elif page == "Visualisasi":
    st.title("ðŸ“ˆ Visualisasi Data Iris")

    plot_type = st.selectbox("Pilih jenis plot", ["Pairplot", "Histogram", "Boxplot"])

    if plot_type == "Pairplot":
        st.write("Visualisasi hubungan antar fitur berdasarkan spesies.")
        fig = sns.pairplot(df, hue="species")
        st.pyplot(fig)

    elif plot_type == "Histogram":
        feature = st.selectbox("Pilih fitur", df.columns[:-1])
        fig, ax = plt.subplots()
        sns.histplot(df[feature], kde=True, ax=ax)
        st.pyplot(fig)

    elif plot_type == "Boxplot":
        fig, ax = plt.subplots()
        sns.boxplot(data=df[df.columns[:-1]], orient="h", palette="Set2", ax=ax)
        st.pyplot(fig)